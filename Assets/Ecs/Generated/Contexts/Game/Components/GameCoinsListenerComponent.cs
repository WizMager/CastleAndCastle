//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public CoinsListenerComponent CoinsListener { get { return (CoinsListenerComponent)GetComponent(GameComponentsLookup.CoinsListener); } }
	public bool HasCoinsListener { get { return HasComponent(GameComponentsLookup.CoinsListener); } }

	public void AddCoinsListener()
	{
		var index = GameComponentsLookup.CoinsListener;
		var component = (CoinsListenerComponent)CreateComponent(index, typeof(CoinsListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceCoinsListener()
	{
		ReplaceComponent(GameComponentsLookup.CoinsListener, CoinsListener);
	}

	public void RemoveCoinsListener()
	{
		RemoveComponent(GameComponentsLookup.CoinsListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherCoinsListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> CoinsListener
	{
		get
		{
			if (_matcherCoinsListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.CoinsListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherCoinsListener = matcher;
			}

			return _matcherCoinsListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeCoins(OnGameCoins value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasCoinsListener
			? CoinsListener
			: (CoinsListenerComponent)CreateComponent(GameComponentsLookup.CoinsListener, typeof(CoinsListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.CoinsListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.Coins))
		{
			var component = Coins;
			value(this, component.PlayerCoins, component.EnemyCoins);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameCoins>(CreationIndex, value, UnsubscribeCoins);
	}

	private void UnsubscribeCoins(int creationIndex, OnGameCoins value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.CoinsListener;
		var component = CoinsListener;
		component.Delegate -= value;
		if (CoinsListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
